В файле скрипта создать 2 переменные (money и time), которые будут получать данные от пользователя:
·      Первая будет спрашивать "Ваш бюджет на месяц?"
·      Вторая "Введите дату в формате YYYY-MM-DD"

Создать объект appData, который будет содержать такие данные:
·      бюджет (передаем сюда переменную из п.2)
·      данные времени - timeData (передаем сюда переменную из п.2)
·      объект с обязательными расходами - expenses (смотри пункт 4)
·      объект с необязательными расходами - optionalExpenses (оставляем пока пустым)
·      массив данных с доп. доходом - income (оставляем пока пустым)
·      свойство savings (выставляем его как false)

Задать пользователю по 2 раза вопросы:
    “Введите обязательную статью расходов в этом месяце”
    “Во сколько обойдется?”
Записать ответы в объект expenses в формате: 
    expenses: {
    “ответ на первый вопрос” : “ответ на второй вопрос”
    }

Вывести на экран пользователя бюджет на 1 день (брать месяц за 30 дней)

Оформить расчет дневного бюджета  и вывод на экран этого значения как одну функцию (detectDayBudget)

Оформить блок кода с расчетом уровня достатка как отдельную функцию (detectLevel)

Создать функцию для определения необязательных расходов (chooseOptExpenses):

Необходимо 3 раза спросить у пользователя “Статья необязательных расходов?”
Записать ответы в объект optionalExpenses в формате Номер - Ответ.
    optionalExpenses: {
    1 : “ответ на вопрос”
    }

Написать проверку, что пользователь может:
·        Ввести в дополнительных доходах (chooseIncome) только строку
·        Не может оставить строку пустой

Задание по проекту:
·        Получить кнопку "Начать расчет" через id
·        Получить все блоки в правой части программы через классы (которые имеют класс название-value, начиная с <div class="budget-value"></div> и заканчивая <div class="yearsavings-value"></div>)
·        Получить поля(input) c обязательными расходами через класс. (class=”expenses-item”)
·        Получить кнопки “Утвердить” и “Рассчитать” через Tag, каждую в своей переменной. 
·        Получить поля для ввода необязательных расходов (optionalexpenses-item) при помощи querySelectorAll
·        Получить оставшиеся поля через querySelector (статьи возможного дохода, чекбокс, сумма, процент, год, месяц, день)

Если программа еще не запущена( не нажали кнопку "Начать расчет") - сделать кнопки неактивными.

Реализовать функционал: при расчете дневного бюджета учитывать сумму обязательных трат (т. e. от бюджета на месяц отнимаем общую сумму всех обяз. трат и ее делим на 30 дней)